var DBMS={databases:[],post:function(a,b){b=JSON.stringify(b);localStorage.setItem(a,b)},retrieve:function(a){return JSON.parse(localStorage.getItem(a))},postAll:function(){this.post("databases",this.databases)},empty:function(){DBMS.databases=[];this.postAll();localStorage.removeItem("databases")},selectProperty:function(a,b,e){for(var c=-1,d=0;d<b.length;d++)try{b[d].name===a&&(c=d)}catch(f){console.warn("Property not found. Either does not exist or has been deleted. Error: "+f)}if(-1!=c&&1!=e)return b[c];if(-1!=c)return c},createDatabase:function(a){this.databases.push({name:a,tables:[]});this.postAll()},selectDatabase:function(a,b){return this.selectProperty(a,this.databases,b)},deleteDatabase:function(a){this.databases.splice(this.selectDatabase(a,!0),1);this.postAll()},emptyDatabase:function(a){a.tables=[]},createTable:function(a,b,e){this.selectDatabase(a).tables.push({name:b,columns:e,rows:[]});this.postAll()},selectTable:function(a,b){return this.selectProperty(b,this.selectDatabase(a).tables)},addData:function(a,b,e){e.length===this.selectTable(a,b).columns.length&&this.selectTable(a,b).rows.push(e);this.postAll()},selectData:function(a,b,e){for(var c=-1,d=0;d<b.columns.length;d++)b.columns[d]===a&&(c=d);if(-1!=c)return b.rows[e][c]}};
